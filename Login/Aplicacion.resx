<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAB1HAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABwvSURBVHja7Z0JdFTl3cYvixXrkgVcEHGp9Ku1WhV3tKJAEJdatbUutCIt1i50sV/V
        2tqe4vK1etyA7IQlLFaWkICCxYIgSzIz2ZPJZJLIooKsySyZsCfv97x37mRmQvZk5s7ceZ5zfuci1OX0
        5Hne//t/N0WhKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
        KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiolQiPaGfiVeh
        KCp6AuBSMAU81QemgnEw/wAGAEVFVwA8Ak4C0UdyYf7BDACKir4AaGYAUBQDgAFAUQwABgBFMQAYABTF
        AGAAUBQDgAFAUQwABgBFMQAYABTFAGAAUBQDgAFAUQwABgBFMQAoyghaVOpQloD5xS5lHpirfecVuZQF
        JW7lffNBZXZtCwOAAUBFm1bYPUpeRaOysiqYXJBd4lJmFziUWZJ8h/LW1gbltU31yowNB5VXNh5SXt9S
        r8zMb/D+OUiWmBxKCkg1O5Q0s1PJsDgRFE4lCzAAKEpnraxyK7lWd7uGx/drYCgYhb++GQFwPww9FYb+
        E74vgX/i1++C2WAW/vpNmP4f+P4Zf/0bfB/Dd2KqyTkaAXAxAuCcuUWuQe9sc6hBIoNBhkJmoVNJNrtR
        RdQzACgqlFpW64G5YXjbKaP86eBicCf4JZgJ1oAysBu4Fpa6jsO4ogc0g6OgAexEOJjBMgTDazD/ZHAD
        AmAY/rkDZwUEgpxOyFDILnUzACiqr8qxwuA2D0zu8Rve1jgQ3xFgEviHZvbtwANEe8CooocB0FU4OBAI
        5QiExWA6AuAmBEDcG5vr1amDDIOsYkwbEAYryxsZABTVs/K+MXikt3mk6S8DPwHZwA6OdGT4EAdAe8hA
        MMH8ryMMkhAAQ9/a0qBWBukWp/qVlQEDgKI60KpKzynzeTAMPAjmgx3gZHdNH+YACKQJYVCIMHgFxr85
        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
</value>
  </data>
</root>